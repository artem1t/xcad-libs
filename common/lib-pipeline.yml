parameters:
  projectName : ''
  
stages:

- stage: 'Build'

  jobs:
  - job:
    pool:
      name: 'Azure Pipelines'
      vmImage: windows-latest

    steps:
      - task: NuGetToolInstaller@0
        displayName: 'Use NuGet 5.4.0'
        inputs:
          versionSpec: 5.4.0
          checkLatest: true
          
      - task: NuGetCommand@2
        displayName: 'NuGet pack'
        inputs:
          command: pack
          packagesToPack: '${{ parameters.projectName }}\*.nuspec'
          packDestination: '$(Build.ArtifactStagingDirectory)/packages'
      
      - publish: '$(Build.ArtifactStagingDirectory)/packages'
        artifact: 'packages'

- stage: 'PublishPreviewNuGetPackage'
  displayName: 'Publish Prerelease NuGet Package to xarial nuget feed'
  dependsOn: 'Build'
  condition: succeeded()
  jobs:
  - job:
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: none

    - download: current
      artifact: 'packages'

    - task: NuGetCommand@2
      displayName: 'Push NuGet Package'
      inputs:
        command: 'push'
        packagesToPush: '$(Pipeline.Workspace)/packages/*.nupkg'
        nuGetFeedType: 'internal'
        publishVstsFeed: 'xarial'
        allowPackageConflicts: true

- stage: 'PublishProductionPackage'
  variables:
    - group: build-vars
    - name: packagePath
      value:
  displayName: 'Publish Release NuGet Package to Nuget.org production'
  dependsOn: 'PublishPreviewNuGetPackage'
  condition: succeeded()
  jobs:
  - deployment:
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'nuget-org'
    strategy:
     runOnce:
       deploy:
          steps:
          - checkout: none

          - download: current
            artifact: 'packages'

          - task: DownloadSecureFile@1
            name: Certificate
            displayName: 'Download code signing certificate'
            inputs:
              secureFile: xarial-code-signing.pfx

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                $packagePath = (Get-ChildItem -Path "$(Pipeline.Workspace)/packages" -Filter "*.nupkg").FullName
                Write-Host $packagePath
                Write-Host "##vso[task.setvariable variable=packagePath;]$packagePath"

          - task: NuGetCommand@2
            displayName: 'Sign NuGet Package'
            inputs:
              command: 'custom'
              arguments: sign "$(PackagePath)" -CertificatePath "$(Certificate.secureFilePath)" -CertificatePassword "$(CODE_SIGN_CERT_PWD)" -Timestamper http://timestamp.comodoca.com

          - task: NuGetCommand@2
            displayName: 'Push NuGet Package'
            inputs:
              command: 'push'
              packagesToPush: '$(Pipeline.Workspace)/packages/*.nupkg'
              nuGetFeedType: 'external'
              publishFeedCredentials: 'Nuget.org'